buildscript {
	ext {
		kotlinVersion = '1.2.51'
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		flatDir {
			dirs 'lib'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'car'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	jcenter()
}

kotlin {
	experimental {
		coroutines 'enable'
	}
}

/* Needed the command "./gradlew wrapper --gradle-version 4.2.1"
    from here (https://docs.gradle.org/current/userguide/gradle_wrapper.html)
 */
test {
    useJUnitPlatform()
}

dependencies {
	compile fileTree(dir: 'lib', include: '*.jar')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile("org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21")
	testCompile('org.springframework.boot:spring-boot-starter-test'){
		exclude module: 'junit'
	}
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
}
